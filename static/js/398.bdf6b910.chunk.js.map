{"version":3,"file":"static/js/398.bdf6b910.chunk.js","mappings":"oQAiBA,EAbkB,WACd,OACI,iBAAKA,UAAU,cAAa,WACxB,gBAAKC,IAAKC,EAAUC,IAAI,cACxB,iBAAKH,UAAU,mBAAkB,oCACP,kBAAK,kBAG/B,gBAAKC,IAAKG,EAAcD,IAAI,oBAGxC,C,uJC2BME,EAAO,SAAH,GAAmB,IAAbC,EAAK,EAALA,MACJC,EAA8DD,EAA9DC,MAAOC,EAAuDF,EAAvDE,YAAaC,EAA0CH,EAA1CG,UAAWC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,SAAUC,EAAUN,EAAVM,MAE5D,OACI,iBAAKZ,UAAU,eAAc,WACzB,gBAAKC,IAAKS,EAAWP,IAAKI,EAAOP,UAAU,uBAC3C,iBAAKA,UAAU,qBAAoB,WAC/B,eAAIA,UAAU,qBAAoB,SAAEO,KACpC,cAAGP,UAAU,sBAAqB,SAAEQ,KACpC,cAAGR,UAAU,sBAAqB,SAAES,KACpC,eAAGT,UAAU,sBAAqB,uBAAYW,MAC9C,gBAAKX,UAAU,sBAAqB,SAAEY,QAE1C,SAAC,KAAI,CAACC,GAAG,gCAAgCb,UAAU,qBAAoB,2BAGnF,EAEA,EAnDwB,WACpB,IAAQc,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAK,eAAjCV,EAAK,KAAEW,EAAQ,KACtB,GAAiDC,EAAAA,EAAAA,KAAzCC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAU,EAAVA,YAElCC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,CAACV,IAEJ,IAAMU,EAAc,WAChBF,IACAD,EAASP,GACJW,KAAKC,EACd,EAEMA,EAAgB,SAACpB,GACnBW,EAASX,EACb,EAEMqB,EAAeP,GAAQ,SAACQ,EAAA,EAAY,IAAM,KAC1CC,EAAUV,GAAU,SAACW,EAAA,EAAO,IAAM,KAClCC,EAAYZ,GAAWC,IAAUd,EAAkC,MAAzB,SAACD,EAAI,CAACC,MAAOA,IAE7D,OACI,iCACI,SAAC0B,EAAA,EAAS,IACTL,EACAE,EACAE,IAGb,C","sources":["components/appBanner/AppBanner.js","components/pages/SingleComicPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport './SingleComicPage.scss'\r\n\r\nconst SingleComicPage = () => {\r\n    const { comicId } = useParams();\r\n    const [comic, setComic] = useState(null);\r\n    const { loading, error, getComic, clearError } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateComic()\r\n    }, [comicId])\r\n\r\n    const updateComic = () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        setComic(comic);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({ comic }) => {\r\n    const { title, description, pageCount, thumbnail, language, price } = comic;\r\n\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to='../marvel-info-portal/comics/' className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;"],"names":["className","src","avengers","alt","avengersLogo","View","comic","title","description","pageCount","thumbnail","language","price","to","comicId","useParams","useState","setComic","useMarvelService","loading","error","getComic","clearError","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","content","AppBanner"],"sourceRoot":""}