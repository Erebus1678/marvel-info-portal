{"version":3,"file":"static/js/77.d27bb927.chunk.js","mappings":"mQAiBA,EAbkB,WACd,OACI,iBAAKA,UAAU,cAAa,WACxB,gBAAKC,IAAKC,EAAUC,IAAI,cACxB,iBAAKH,UAAU,mBAAkB,oCACP,kBAAK,kBAG/B,gBAAKC,IAAKG,EAAcD,IAAI,oBAGxC,C,yFCZME,EAAa,qJAGd,OAHc,oCACfC,MAAQ,CACJC,OAAO,GACV,EAgBA,OAhBA,yCAED,SAAkBA,EAAOC,GACrBC,QAAQC,IAAIH,EAAOC,GACnBG,KAAKC,SAAS,CACVL,OAAO,GAEf,GAAC,oBAED,WAEI,OAAII,KAAKL,MAAMC,OACJ,SAAC,IAAY,IAGjBI,KAAKE,MAAMC,QACtB,KAAC,EAnBc,CAASC,EAAAA,WAqB5B,K,uJCyDA,EAxEmB,WAEf,OAAoCC,EAAAA,EAAAA,UAAS,IAAG,eAAzCC,EAAU,KAAEC,EAAa,KAChC,GAA4CF,EAAAA,EAAAA,WAAS,GAAM,eAApDG,EAAc,KAAEC,EAAiB,KACxC,GAA4BJ,EAAAA,EAAAA,UAAS,GAAE,eAAhCK,EAAM,KAAEC,EAAS,KACxB,GAAsCN,EAAAA,EAAAA,WAAS,GAAM,eAA9CO,EAAW,KAAEC,EAAc,KAElC,GAAyCC,EAAAA,EAAAA,KAAjCC,EAAO,EAAPA,QAASnB,EAAK,EAALA,MAAOoB,EAAY,EAAZA,cAExBC,EAAAA,EAAAA,YAAU,WACNC,EAAUR,GAAQ,EAEtB,GAAG,IAEH,IAAMQ,EAAY,SAACR,EAAQS,GACbV,GAAVU,GACAH,EAAaN,GACRU,KAAKC,EACd,EAEMA,EAAqB,SAACC,GACxB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAEZhB,EAAc,GAAD,eAAKD,IAAU,OAAKgB,KACjCb,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeU,EACnB,EAsBA,IAAME,EApBN,SAAqBC,GACjB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GACzB,OACI,eAAIxC,UAAU,eAAc,UACxB,UAAC,KAAI,CAACyC,GAAE,YAAOF,EAAKG,IAAK,WACrB,gBAAKzC,IAAKsC,EAAKI,UAAWxC,IAAKoC,EAAKK,MAAO5C,UAAU,sBACrD,gBAAKA,UAAU,oBAAmB,SAAEuC,EAAKK,SACzC,gBAAK5C,UAAU,qBAAoB,SAAEuC,EAAKM,YAJhBL,EAQ1C,IAEA,OACI,eAAIxC,UAAU,eAAc,SACvBoC,GAGb,CAEcU,CAAY7B,GAEpB8B,EAAexC,GAAQ,SAACyC,EAAA,EAAY,IAAM,KAC1CC,EAAUvB,IAAYP,GAAiB,SAAC+B,EAAA,EAAO,IAAM,KAE3D,OACI,iBAAKlD,UAAU,eAAc,UACxB+C,EACAE,EACAb,GACD,mBACIe,SAAUhC,EACViC,MAAO,CAAE,QAAW7B,EAAc,OAAS,SAC3CvB,UAAU,mCACVqD,QAAS,kBAAMxB,EAAUR,EAAO,EAAC,UACjC,gBAAKrB,UAAU,QAAO,2BAItC,E,SCzDA,EAhBmB,WAEf,OAA4CgB,EAAAA,EAAAA,UAAS,MAAK,eAAnCsC,GAAF,KAAmB,MAIxC,OACI,iCACI,SAACC,EAAA,EAAS,KACV,SAAClD,EAAA,EAAa,WACV,SAAC,EAAU,CAACmD,iBAPC,SAACd,GACtBY,EAAkBZ,EACtB,QASJ,C","sources":["components/appBanner/AppBanner.js","components/errorBoundary/ErrorBoundary.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { Component } from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch(error, erroInfo) {\n        console.log(error, erroInfo);\n        this.setState({\n            error: true\n        })\n    }\n\n    render() {\n\n        if (this.state.error) {\n            return <ErrorMessage />\n        }\n\n        return this.props.children;\n    }\n}\nexport default ErrorBoundary;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`./${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                disabled={newItemLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { useState } from 'react';\r\n\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\nimport ComicsList from '../comicsList/ComicsList';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\nconst ComicsPage = () => {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const [selectedComics, setSelectedComics] = useState(null)\r\n    const onComicsSelected = (id) => {\r\n        setSelectedComics(id)\r\n    }\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ErrorBoundary>\r\n                <ComicsList onComicsSelected={onComicsSelected} />\r\n            </ErrorBoundary>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["className","src","avengers","alt","avengersLogo","ErrorBoundary","state","error","erroInfo","console","log","this","setState","props","children","Component","useState","comicsList","setComicsList","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","to","id","thumbnail","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","onClick","setSelectedComics","AppBanner","onComicsSelected"],"sourceRoot":""}